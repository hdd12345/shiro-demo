<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
					    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
					    http://www.springframework.org/schema/tx
                     	http://www.springframework.org/schema/tx/spring-tx.xsd
                     	http://www.springframework.org/schema/aop
                     	http://www.springframework.org/schema/aop/spring-aop.xsd
					    http://www.springframework.org/schema/context
					    http://www.springframework.org/schema/context/spring-context-4.2.xsd">
    <!-- 加载注解驱动 -->
    <context:annotation-config/>
    <!-- 组件扫描 -->
    <context:component-scan base-package="hdd.service.impl"></context:component-scan>

    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="30"/>
        <property name="maxIdle" value="5"/>
    </bean>

    <!-- sqlSessionFactory配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描映射文件，映射文件与mapper接口同名且在同一目录时，不需在此扫描 -->
        <!-- <property name="mapperLocations" value="classpath:com/time/mapper/*.xml"/> -->
    </bean>

    <!-- 批量配置mapper，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册
        遵循规范：将mapper.java和mapper.xml映射文件名称保持一致，并且在同一个目录中
        自动扫描出来的mapper的bean的id为mapper类名（首字母小写）-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="hdd.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 事务管理器：对mybatis操作数据库事务控制，spring使用jdbc的事务控制类 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 通知：配置事务属性 -->
    <tx:advice id="tx_advice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="register*" propagation="REQUIRED"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="login*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- aop -->
    <aop:config>
        <!-- 通知器 -->
        <aop:advisor advice-ref="tx_advice" pointcut="execution(* hdd.service.impl.*.*(..))"/>
    </aop:config>
    <!-- 基于注解的事务 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->

    <!-- shiro过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- loginUrl认证提交地址，如果没有认证则会请求该地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/login"/>
        <!-- 没有权限默认跳转的页面 -->
        <property name="unauthorizedUrl" value="/refuse.jsp"/>
        <!-- 过滤器链定义，从上向下执行，一般将/**放最下边 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 退出拦截，请求logout执行退出操作 -->
                /logout = logout
                <!-- 禁止访问页面 -->
                /refuse.jsp = anon
                <!-- roles[XX]表明只有XX角色可以访问 -->
                /item/list = roles[item],authc
                /js/** anon
                /images/** anon
                /css/** anon
                /validateCode.jsp anon
                /item/* authc
                /** = authc
            </value>
        </property>
    </bean>
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
    </bean>
    <!-- 自定义Realm -->
    <bean id="userRealm" class="hdd.realm.UserRealm"/>
</beans>